# depends
FIND_PACKAGE(Lua51 REQUIRED)
FIND_PACKAGE(ZLIB REQUIRED)
FIND_PACKAGE(SDL REQUIRED)
FIND_PACKAGE(SDL_mixer REQUIRED)
FIND_PACKAGE(SDL_image REQUIRED)
FIND_PACKAGE(SDL_ttf REQUIRED)
FIND_LIBRARY(MATH_LIBRARY m)

IF(WITH_ICONV)
	ADD_DEFINITIONS(-D_HAVE_ICONV)
	FIND_PATH(ICONV_INCLUDE_DIR iconv.h)
	FIND_LIBRARY(ICONV_LIBRARY NAMES iconv libiconv c)
ENDIF(WITH_ICONV)

IF(WITH_GTK)
	FIND_PACKAGE(GTK2 REQUIRED)
	ADD_DEFINITIONS(
		-D_USE_GTK -D_USE_BROWSE
	)
ENDIF(WITH_GTK)

# sources
SET(INSTEAD_SRCS
	SDL_anigif.c
	SDL_gfxBlitFunc.c
	SDL_rotozoom.c
	cache.c
	config.c
	game.c
	graphics.c
	idf.c
	input.c
	instead.c
	ioapi.c
	lfs.c
	main.c
	menu.c
	sound.c
	themes.c
	unpack.c
	unzip.c
	util.c
)

# platform-specific stuff
IF(APPLE)
	SET(INSTEAD_SRCS ${INSTEAD_SRCS} macos.c)
ELSEIF(WIN32 AND WINCE)
	SET(INSTEAD_SRCS ${INSTEAD_SRCS} wince.c iowin32.c)
ELSEIF(WIN32 AND NOT WINCE)
	SET(INSTEAD_SRCS ${INSTEAD_SRCS} windows.c iowin32.c)
ELSEIF(UNIX)
	SET(INSTEAD_SRCS ${INSTEAD_SRCS} unix.c)
ELSE(APPLE)
	MESSAGE(FATAL_ERROR "Your platform is not supported yet, sorry")
ENDIF(APPLE)

# flags
ADD_DEFINITIONS(
	-DVERSION=\"${INSTEAD_VERSION}\"
	-D_HAVE_ICONV
	-D_USE_UNPACK
)

IF(NOT STANDALONE)
	ADD_DEFINITIONS(
		-DLANG_PATH=\"${CMAKE_INSTALL_PREFIX}/${LANGDIR}/\"
		-DSTEAD_PATH=\"${CMAKE_INSTALL_PREFIX}/${STEADDIR}/\"
		-DGAMES_PATH=\"${CMAKE_INSTALL_PREFIX}/${GAMESDIR}/\"
		-DTHEMES_PATH=\"${CMAKE_INSTALL_PREFIX}/${THEMESDIR}/\"
		-DICON_PATH=\"${CMAKE_INSTALL_PREFIX}/${ICONDIR}/\"
	)
ELSE(NOT STANDALONE)
	ADD_DEFINITIONS(
		-DLANG_PATH=\"${CMAKE_SOURCE_DIR}/lang/\"
		-DSTEAD_PATH=\"${CMAKE_SOURCE_DIR}/stead/\"
		-DGAMES_PATH=\"${CMAKE_SOURCE_DIR}/games/\"
		-DTHEMES_PATH=\"${CMAKE_SOURCE_DIR}/themes/\"
		-DICON_PATH=\"${CMAKE_SOURCE_DIR}/icon/\"
	)
ENDIF(NOT STANDALONE)

# targets
INCLUDE_DIRECTORIES(
	${SDL_INCLUDE_DIR}
	${SDL_MIXER_INCLUDE_DIR}
	${SDL_IMAGE_INCLUDE_DIR}
	${SDL_TTF_INCLUDE_DIR}
	${LUA_INCLUDE_DIR}
	${ZLIB_INCLUDE_DIR}
	${GTK2_DEFINITOIONS}
	${GTK2_INCLUDE_DIRS}
	${ICONV_INCLUDE_DIR}
)

ADD_EXECUTABLE(sdl-instead ${INSTEAD_SRCS})

TARGET_LINK_LIBRARIES(sdl-instead
	${SDL_LIBRARY}
	${SDL_MIXER_LIBRARY}
	${SDL_IMAGE_LIBRARY}
	${SDL_TTF_LIBRARY}
	${ZLIB_LIBRARY}
	${LUA_LIBRARIES}
	${GTK2_LIBRARIES}
	${ICONV_LIBRARY}
	${MATH_LIBRARY}
)

# install
IF(NOT STANDALONE)
	INSTALL(TARGETS sdl-instead DESTINATION ${BINDIR})
ENDIF(NOT STANDALONE)
